name: Build and release CLI

on:
  push:
    branches:
      - main
    paths:
      - cli/main.go

permissions:
  contents: write      

jobs:
  extract-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}    
    steps:
      - uses: actions/checkout@v4
      - id: version
        run: |
          VERSION=$(perl -n -e '/^const Version = "(.+)"$/ && print $1' < cli/main.go)
          echo "VERSION: ${VERSION}"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
      # TODO: Validate version
      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/cli-${{ steps.version.outputs.version }}',
              sha: context.sha
            })
  go-matrix-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - darwin
          - linux
        arch:
          - amd64
          - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: cli/go.mod
          cache-dependency-path: cli/go.sum
      - name: go build
        env:
          GOARCH: ${{ matrix.arch }}
          GOOS: ${{ matrix.os }}
        run: |
          cd cli
          echo "\$GOARCH: ${GOARCH}"
          echo "\$GOOS: ${GOOS}"
          go build -o cli-${GOOS}-${GOARCH}
          ls -la cli-${GOOS}-${GOARCH}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cli-${{ matrix.os }}-${{ matrix.arch }}
          path: cli/cli-${{ matrix.os }}-${{ matrix.arch }}

  create-release:
    needs: [extract-version, go-matrix-build]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Show artifacts
        run: |          
          ls -la
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: cli-${{ needs.extract-version.outputs.version }}
          tag_name: cli-${{ needs.extract-version.outputs.version }}
          files: cli-*